#!/bin/bash
#
# RetroRig setup modules
# This is a small script to copy over configuration files for emulators
# append a "-x" on the end above for debugging if need be
# Please report any errors via a pull request
# You can also reach me on twitter: @N3RD42
#

function rrs_prepareFolders()
{
	echo "Creating folders for ROMs, Artwork, Saves, and dotfiles"

	
	pathlist=()

	# create autostart folder for manual desktop entries
	pathlist+=("$home/.config/autostart/")

	#emulator base directory
	pathlist+=("$rootdir/emulators")

	#setup skelton folders for XBMC Rom Collection Browser
	#ROMs
	pathlist+=("$rootdir/ROMs/Atari 2600")
	pathlist+=("$rootdir/ROMs/MAME")
	pathlist+=("$rootdir/ROMs/N64")
	pathlist+=("$rootdir/ROMs/NES")
	pathlist+=("$rootdir/ROMs/SNES")
	pathlist+=("$rootdir/ROMs/Sega Master System")
	pathlist+=("$rootdir/ROMs/Sega Game Gear")
	pathlist+=("$rootdir/ROMs/GBC")
	pathlist+=("$rootdir/ROMs/GBA")
	pathlist+=("$rootdir/ROMs/TurboGraphx 16")
	pathlist+=("$rootdir/ROMs/Neo-Geo/CDZ")
	pathlist+=("$rootdir/ROMs/PSP")
	pathlist+=("$rootdir/ROMs/PS1")
	pathlist+=("$rootdir/ROMs/Genesis")

	#Artwork 
	pathlist+=("$rootdir/Artwork/Atari 2600")
	pathlist+=("$rootdir/Artwork/N64")
	pathlist+=("$rootdir/Artwork/NES")
	pathlist+=("$rootdir/Artwork/SNES")
	pathlist+=("$rootdir/Artwork/Sega Master System")
	pathlist+=("$rootdir/Artwork/Sega Game Gear")
	pathlist+=("$rootdir/Artwork/GBC")
	pathlist+=("$rootdir/Artwork/GBA")
	pathlist+=("$rootdir/Artwork/TurboGraphx 16")
	pathlist+=("$rootdir/Artwork/Neo-Geo/CDZ")
	pathlist+=("$rootdir/Artwork/PSP")
	pathlist+=("$rootdir/Artwork/PS1")
	pathlist+=("$rootdir/Artwork/Genesis")

	#Artwork - MAME offline scraper
	pathlist+=("$rootdir/Artwork/MAME")
	pathlist+=("$rootdir/Artwork/MAME/boxfront")
	pathlist+=("$rootdir/Artwork/MAME/RCB")
	pathlist+=("$rootdir/Artwork/MAME/cabinet")
	pathlist+=("$rootdir/Artwork/MAME/marquee")
	pathlist+=("$rootdir/Artwork/MAME/action")
	pathlist+=("$rootdir/Artwork/MAME/title")
	pathlist+=("$rootdir/Artwork/MAME/gameplay")

	#Saves (if any)
	pathlist+=("$rootdir/Saves/Atari 2600")
	pathlist+=("$rootdir/Saves/MAME")
	pathlist+=("$rootdir/Saves/N64")
	pathlist+=("$rootdir/Saves/NES")
	pathlist+=("$rootdir/Saves/SNES")
	pathlist+=("$rootdir/Saves/Sega Master System")
	pathlist+=("$rootdir/Saves/Sega Game Gear")
	pathlist+=("$rootdir/Saves/GBC")
	pathlist+=("$rootdir/Saves/GBA")
	pathlist+=("$rootdir/Saves/TurboGraphx 16")
	pathlist+=("$rootdir/Saves/Neo-Geo/CDZ")
	pathlist+=("$rootdir/Saves/PSP")
	pathlist+=("$rootdir/Saves/PS1")
	pathlist+=("$rootdir/Saves/Genesis")

	#create dotfiles
	pathlist+=("$home/.retrorig")
	# qjoypad must stay in $home, since it launches before* RetroRig
	pathlist+=("$home/.qjoypad3")
	pathlist+=("$config_home/.config/mupen64plus")
	
	pathlist+=("$config_home/.config/ppsspp/PSP/SYSTEM")
	pathlist+=("$config_home/.mame/cfg")
	pathlist+=("$config_home/.mess")
	pathlist+=("$config_home/.mess/cfg")
	pathlist+=("$config_home/.stella")
	pathlist+=("$xbmc_home/userdata/keymaps")
	pathlist+=("$config_home/.mednafen")

	#BIOS folder(s)
	pathlist+=("$rootdir/BIOS/MESS")
	pathlist+=("$rootdir/BIOS/MAME")
	# Note: PS1 BIOS path is set in mednafen under:
	# filesys.path_firmware
	pathlist+=("$rootdir/BIOS/Mednafen")

	#Configs
	pathlist+=("$rootdir/Configs")

	# quotes needed on entry to preven globbing on directory creation!
	# Expanding arrays involves [@] and {}
	for entry in "${pathlist[@]}"
	do
	    if [[ ! -d "$entry" ]]; then
                mkdir -p "$entry" 
                chown "$user" "$entry"
                chgrp "$user" "$entry"
        fi
	done

	# correct permissions
	h_correct_perms

}

function rrs_unity()
{

#disable screensaver, XBMC will manage this
#export display to allow gsettings running in terminal window
export DISPLAY=:0.0
gsettings set org.gnome.desktop.screensaver lock-enabled false
gsettings set org.gnome.desktop.screensaver ubuntu-lock-on-suspend false
gsettings set org.gnome.desktop.session idle-delay 3600

gsettings set com.canonical.Unity.Launcher favorites "$(gsettings get com.canonical.Unity.Launcher favorites | sed "s/, *'RetroRig.desktop' *//g" | sed "s/'RetroRig.desktop' *, *//g" | sed -e "s/]$/, 'RetroRig.desktop']/")"

}


function rrs_gamepad ()
{

# some residual chown/chmod text shows up at times, clear
clear

cmd=(dialog --backtitle "LibreGeek.org RetroRig Installer" --menu "| Gamepad Select | \
			 Request any new Gamepads via github!" 16 62 16)
options=(1 "Xbox 360 Controller (wireless)"
	 2 "Xbox 360 Controller (USB)"
	 3 "Sony PS3 Sixaxis (Bluetooth)"
	 4 "Sony PS3 Sixaxis (USB)"
	 5 "Exit gamepad selection")

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in

		1)
		gp_x360_wireless
		;;

		2)
		gp_x360_usb
		;;

		3)
		gp_ps3_blu
		;;

		4)
		gp_ps3_usb
		;;

		5)
		return
		;;

		esac
	done
}

function rrs_add_standard_repos()
{

	# add repository for official team XBMC "stable"
	# We use our own custom pkgs now...
	add-apt-repository -y ppa:team-xbmc/ppa

	# add respository for qtsixa (PS3 pairing)
	add-apt-repository -y ppa:falk-t-j/qtsixa

}

function rrs_emulators()
{
	__postMSGs=""

	clear
	echo "Binaries-based installation"

	# install emulators
	em_install_mupen64plus 
	em_install_mame
	em_install_mess
	em_install_stella
	em_install_mednafen
	em_install_ppsspp

	#fix permissions since we are running as sudo
	h_correct_perms

	# Run Debug checks
	rrs_debug

	__postMSGs="$__postMSGs This current configuration requires BIOS files be placed under '$rootdir/BIOS/' folder for the respective system you are using or under the '$rootdir/ROMs/' folder for the same system. You may also use the BIOS Loader under the settings menu. Many MAME games under MAME4ALL have self contained BIOS files."

	# inject a space to seperate messages?
	__postMSGs="$__postMSGs "

	__postMSGs="$__postMSGs\n\nIf you wish to have artwork for the MAME games, please visit the RCB main page at http://bit.ly/1lHHSIe and follow the 'Get artwork from emumovies' section'. The size is much too large to contain in RetroRig or Github. This may change."


	if [[ ! -z $__postMSGs ]]; then
	dialog --backtitle "LibreGeek.org - RetroRig Setup. Installation folder: $rootdir for user $user" --msgbox "$__postMSGs" 17 70
	fi

	dialog --backtitle "LibreGeek.org - RetroRig Setup. Installation folder: $rootdir for user $user" --msgbox "Finished emulator installs.\n\nYou now have to copy roms to the roms folders. You may also use the 'ROM loader' in settings menu" 17 60

}

function rrs_software() 
{

	# clear post install messages
	__postMSGs=""
	clear
   	
	echo "Binaries-based installation"

	# add multi-arch support
	dpkg --add-architecture i386

	# add add repos
	rrs_add_standard_repos

	# add extra repostories to the em_add_repos function!
	em_add_repos

	# update repository listings
	h_update_system

	# install software from repositories
	# install binaries
	apt-get install -y xboxdrv curl python-software-properties \
	pkg-config software-properties-common dconf-tools jstest-gtk \
	qjoypad build-essential sixad libusb-dev libusb-0.1-4

	# call RetroRig's custom deb install for ps3 hotplugging. 
	# Thankfully our package still works with the Xbox 360 implementation,
	# so it is now part of the standard install set
	rrs_xbmc_patched

	# Remove apport, as bug apport-gtk does nothing but interrupt
	# XBMC and emulators
	apt-get remove -y apport apport-gtk

        #fix permissions since we are running as sudo
        h_correct_perms

	# Run Debug checks
	rrs_debug

	# Inform user about post-install tasks
	# Output postMSGs to screen

	# inject a space to seperate messages?
	__postMSGs="$__postMSGs For VirtualBox users, please see the wiki under 'Installation' for notes on running RetroRig under a virtual machine! At the minimum, you will need to add a filter for your controller "
	
        if [[ ! -z $__postMSGs ]]; then
            dialog --backtitle "LibreGeek.org - RetroRig Setup. Installation folder: $rootdir for user $user" --msgbox "$__postMSGs\n\nSoftware install complete. \
See debug.log for more details. Continuing on to emulator installs..." 18 60
        fi

        chown -R "$user" "$scriptdir/logs/install_$now.log.gz"
        chgrp -R "$user" "$scriptdir/logs/install_$now.log.gz"
	#END
}

function rrs_debug()
{
	clear
	echo "Generating debug log"

	# Check for existance of essential files
	echo "Essential files: XBMC:" > "$rootdir/logs/debug.log"
	echo "Path(s): '$xbmc_home/userdata'" >> "$rootdir/logs/debug.log"
	h_filechecker "$xbmc_home/userdata" "$rootdir/logs/debug.log"

	# RCB
	echo "Essential files: ROM Collection Browser:" >> "$rootdir/logs/debug.log"
	echo "Path: '$xbmc_home/addons/script.games.rom.collection.browser'" >> "$rootdir/logs/debug.log"
	h_filechecker "$xbmc_home/addons/script.games.rom.collection.browser"	
	echo "Path: '$xbmc_home/userdata/addon_data/script.games.rom.collection.browser'" >> "$rootdir/logs/debug.log"
	h_filechecker "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser" "$rootdir/logs/debug.log"

	# applications
	h_filechecker "/usr/lib/xbmc/xbmc.bin"
	h_filechecker "/usr/bin/xbmc-retrorig"
	h_filechecker "/usr/share/applications/RetroRig.desktop"
	h_filechecker "/usr/share/applications/startXBMC.sh"
	h_filechecker "/usr/share/applications/gp_autodetect_xbmc.sh"
	h_filechecker "$xdg_desktop_dir/RetroRig.desktop"
	h_filechecker "$xdg_pictures_dir/retro-icon.png"

	# autostart entries
	h_filechecker "$home/.config/autostart/RetroRig.desktop"
	h_filechecker "$home/.config/autostart/qjoypad.desktop"


	# init file checks	
	echo "Available init files:" >> "$rootdir/logs/debug.log"
	echo "Has xboxdrv been loaded?" >> "$rootdir/logs/debug.log"
	h_filechecker "/etc/init.d/xboxdrv"
	h_filechecker "/etc/default/xboxdrv"

	# Check unity settings:
	echo "Unity settings (if applicable):" >> "$rootdir/logs/debug.log"
	gsettings list-recursively "org.gnome.desktop.screensaver" | grep "lock-enabled" >> "$rootdir/logs/debug.log"
	gsettings list-recursively "org.gnome.desktop.screensaver" | grep "ubuntu-lock-on-suspend" >> "$rootdir/logs/debug.log"	
	gsettings list-recursively "org.gnome.desktop.session" | grep "idle-delay" >> "$rootdir/logs/debug.log"

	# Source built / pre-built
	h_filechecker "$rootdir/emulators/PPSSPP/ppsspp-0.9.8-SDL-pk64"
	h_filechecker "/ust/bin/PPSSPPSDL"

	#APT pkg checks
	echo -e "\nCheck for needed pkgs installed via apt: " >> "$rootdir/logs/debug.log"
	h_pkgcheck "stella"
	h_pkgcheck "python-software-properties"
	h_pkgcheck "xbmc"
	h_pkgcheck "dconf-tools"
	h_pkgcheck "xboxdrv"
	h_pkgcheck "curl"
	h_pkgcheck "xbmc"
	h_pkgcheck "mednafen"
	h_pkgcheck "mess"
	h_pkgcheck "mame"
	h_pkgcheck "qjoypad"
	h_pkgcheck "jstest-gtk"

   	echo -e "\nEnd of log file" >> "$rootdir/logs/debug.log" >> "$rootdir/logs/debug.log"
	
	dialog --backtitle "LibreGeek.org - RetroRig Setup. Installation folder: $rootdir for user $	user" --msgbox "Debug log was generated in $rootdir/logs/debug.log. Additional logs can be found in the folder $scriptdir/logs/." 10 60 

	#corect permissions
	h_correct_perms
}

function rrs_xbmc_patched()
{

	clear
	# create autostart for XBMC and place our modified files
	# Custom script for reboots/hotplugging
	cp -v "$rootdir/XBMC-cfgs/extra/gp_autodetect_xbmc.sh" "/usr/share/applications/"
	cp -v "$rootdir/XBMC-cfgs/extra/RetroRig.desktop" "/usr/share/applications/"
	cp -v "$rootdir/XBMC-cfgs/extra/RetroRig.desktop" "$xdg_desktop_dir"
	cp -v "$rootdir/XBMC-cfgs/extra/retro-icon.png" "$xdg_pictures_dir"
	cp -v "$rootdir/XBMC-cfgs/extra/retro-icon.png" "/usr/share/icons/"
	cp -v "$rootdir/XBMC-cfgs/extra/startXBMC.sh" "/usr/share/applications/"
	
	# Can't use $config_home in the desktop file, so need to replace $user string
	sed -i "s|/home/test/Pictures|$xdg_pictures_dir|g" "/usr/share/applications/RetroRig.desktop"

	# Can't use $config_home in the desktop file, so need to replace $user string
	sed -i "s|/home/test/Pictures|$xdg_pictures_dir|g" "$xdg_desktop_dir/RetroRig.desktop"

	# create autostart entry, remove prior if it exists
	rm -f "$home.config/autostart/RetroRig.desktop"
	cp -v "$rootdir/XBMC-cfgs/extra/RetroRig.desktop" "$home/.config/autostart"

	# Can't use $config_home in the desktop file, so need to replace $user string
	sed -i "s|/home/test/Pictures|$xdg_pictures_dir|g" "$home/.config/autostart/"

	# fix their permissions
	chmod 755 "/usr/share/applications/gp_autodetect_xbmc.sh" 
	chmod 755 "$home/.config/autostart/RetroRig.desktop"
	chmod 755 "/usr/share/applications/RetroRig.desktop"
	chmod 755 "/usr/share/applications/startXBMC.sh" 

	# remove old xbmc-bin, install our patched version
	apt-get remove -y xbmc xbmc-bin

	# copy down the patched debs from libregeek (saves on space, dl speed is adaquate for now)
	wget -P /tmp "www.libregeek.org/RetroRig/xbmc/xbmc-bin_Gotham_V13.1_patched_for_RetroRig_patchlevel_4.deb"
	wget -P /tmp "www.libregeek.org/RetroRig/xbmc/xbmc_Gotham_V13.1_patched_for_RetroRig_patchlevel_4.deb"

	# install dependencies manually
	apt-get install -y mesa-utils \
                           libva-intel-vaapi-driver \
                           i965-va-driver:amd64 \
                           libavahi-compat-libdnssd-dev \
		           libavahi-compat-libdnssd1:amd64 \
                           libjs-jquery \
                           python-bluez \
                           python-simplejson \
                           python-support \
                           ttf-dejavu-core \
                           libnfs1 \
			   libpcrecpp0 \
                           libbluray1 \
                           libshairport1 \
                           libshairplay0 \
			   libsdl1.2debian \
                           libaacs0 \
                           liblockdev1 \
                           libcec2 \
                           libvdpau1 \
                           libmicrohttpd10 \
                           libao-common \
                           libao4 \
                           mysql-common \
                           libmysqlclient18 \
                           libtinyxml2.6.2 \
                           libva-x11-1 \
                           libva-glx1 \
                           libcrystalhd3

	# install deb from /tmp
	dpkg -i "/tmp/xbmc-bin_Gotham_V13.1_patched_for_RetroRig_patchlevel_4.deb"
        dpkg -i "/tmp/xbmc_Gotham_V13.1_patched_for_RetroRig_patchlevel_4.deb"

	# cleanup deb
	rm -f "/tmp/xbmc-bin_Gotham_V13.1_patched_for_RetroRig_patchlevel_*.deb"
	rm -f "/tmp/xbmc_Gotham_V13.1_patched_for_RetroRig_patchlevel_*.deb"

        # get SHA1 tag from patched XBMC version
        sha1=`file /usr/lib/xbmc/xbmc.bin | cut -f 19 -d ' '| cut -f 2 -d '='|cut -f 1 -d ','`
        # insert SHA1 tag to rescan by replacing the place holder
        cat "$rootdir/XBMC-cfgs/extra/rescan" | sed s/placeholderSHA1/$sha1/ > /tmp/rescan
        # move to /etc/init.d
	mv "/tmp/rescan" "/etc/init.d/rescan"

	# Create our on start file so we have use our own dotfile, rather than make the user
	# use their existing .xbmc dotfile
	cp -v "XBMC-cfgs/extra/xbmc-retrorig" "/usr/bin"

        chmod 755 "/etc/init.d/rescan"  

        # update init scripts
	update-rc.d rescan defaults

	# start service
	service rescan start
}

function rrs_xbmc_cfgs()
{
	clear
	
	# set local vars for this function
	local gamedb_org="$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/"
	local gamedb_tmp="/tmp/MyGames.db"

	# back the current MyGames.db file if it exists	
	if [[ -n "$gamedb_org" ]]; then
		cp -v "$gamedb_org" "/tmp"
	fi

	# xbmc does not (at least for Ubuntu's repo pkg) load the
	# dot files without loading XBMC at least once, so let's copy ours in first

	#copy in default folder base from first run:	
	cp -Rv "$scriptdir/XBMC-cfgs/addons" "$xbmc_home"
	cp -Rv "$scriptdir/XBMC-cfgs/userdata" "$xbmc_home"

	# Restore MyGames.db if it exists
	if [[ -n "$gamedb_tmp" ]]; then
		# copy file over
		cp -v "$gamedb_tmp" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/"
		# remove /tmp file
		# rm -f "$gamedb_tmp"
	fi



	# set the system user to an absolute value.
	# RCB and some config files don't like using $config_home, rather /home/test/
	# Let's change the config files to reflect the current username
	sed -i "s|/home/test/|/home/$user/|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	echo "The user applied to configuration files was: $user"

	# correct permissions
	h_correct_perms
}

function rrs_done()
{
clear

# inform user install is done (this is the last step of main, option 1)
        dialog --backtitle "LibreGeek.org - RetroRig Setup. Installation folder: $rootdir for user $user" --msgbox "Finished main install tasks.\n\nYou now have to copy roms to the roms folders. \nThis can be done via SSH, Samba, or via your graphic folder manager (please see settings menu for more)\n\nAll current config folders used were appended with .old for restoration purposes.\n\nPlease reboot to complete the installation.\n\nThe kernel has been upgraded to 3.14.0-031400-generic" 18 50

# correct permissions
h_correct_perms
}

function rrs_showHelp()
{
    #set color for highlights
    # Arch Linux wiki color listing: http://bit.ly/1nhkU8Y
    PATHCOLOR="36m"  #Cyan text
    TITLECOLOR="33m"  #Yellow text
    BARCOLOR="35m"  #Yellow text

    #Console help file
    clear
    echo ""
    echo -e "\e[0"$BARCOLOR$"============================================================\e[0m"
    echo -e "\e[0"$TITLECOLOR$"RetroRig Help File\e[0m"
    echo -e "\e[0"$BARCOLOR$"============================================================\e[0m"
    echo ""
    echo "This script installs XBMC as a backend, many emulators, 
and ROM Collection Browser as the graphical front end. 
Because it needs to install some APT packages it has to be 
run with root priviliges."

    echo ""
    echo "When using..."
    echo "sudo ./retrorig_setup.sh
The installation directory is:"
echo -e "\e[0$PATHCOLOR$xbmc_home/RetroRig for the current user\e[0m"

    echo ""
    echo "When using..."
    echo "sudo ./retrorig_setup.sh USERNAME
The installation directory is:"
echo -e "\e[0$PATHCOLOR/$xbmc_home/USERNAME/RetroRig for user USERNAME\e[0m"

    echo ""
    echo "When using..."
    echo "sudo ./retrorig_setup.sh USERNAME ABSPATH
The installation directory is:"
echo -e "\e[0"$PATHCOLOR"ABSPATH for user USERNAME\e[0m"
    echo ""
    echo "Please submit all issues to GitHub: bit.ly/1ocT0we"
    
    echo -e "\e[0"$BARCOLOR$"============================================================\e[0m"
    echo "End Help File"
    echo -e "\e[0"$BARCOLOR$"============================================================\e[0m"
    echo ""
}

function rrs_prereq()
{
    if [[ -z $(type -P git) || -z $(type -P dialog) || -z $(type -P figlet) ]]; then
	echo ""
	echo "######################################"
	echo "Pre-req checks"	
	echo "######################################"
        echo "Did not find 1 or more of the needed packages: git, dialog, or figlet"
	echo "Attempting to install these now."
	echo ""
	sleep 3s
        apt-get update
        apt-get install -y git dialog figlet
        if [ $? == '0' ]; then
            echo "Successfully installed 'git/dialog/figlet'." > "$scriptdir/logs/prechecks.log"
	    sleep 3s
	    prereqs="true"
        else
            echo "Could not install 'git' and/or 'dialog/figlet'. Exiting..." > "$scriptdir/logs/prechecks.log"
	    prereqs="false"
	    sleep 3s
            exit 1
        fi
    else
        echo "Found needed packages 'git/dialog/figlet'." > "$scriptdir/logs/prechecks.log"
	prereqs="true"
	sleep 2s
    fi


echo "Current install user: $SUDO_USER" >> "$scriptdir/logs/prechecks.log"
echo "Current install rootdir is: $rootdir" >>"$scriptdir/logs/prechecks.log"
echo "Current script dir is:  $scriptdir" >>"$scriptdir/logs/prechecks.log"

if [ "$prereqs" == "true" ]; then
    echo "Pre-checks were sucessful!!!" >> "$scriptdir/logs/prechecks.log"
else
    echo "Pre-checks were NOT sucessful. Sad crab!" >> "$scriptdir/logs/prechecks.log"
fi

chown -R "$user" "$scriptdir/logs/prechecks.log"
chgrp -R "$user" "$scriptdir/logs/prechecks.log"



}

function rrs_reboot()
{

	#confirm reboot is the intended action
	dialog --title "Confirm yes/no" \
	--backtitle "LibreGeek.org RetroRig Installer" \
	--yesno "Are you sure you want to Reboot?"  6 0

	# Get exit status
	# 0 means user hit [yes] button.
	# 1 means user hit [no] button.
	# 255 means user hit [Esc] key.
	response=$?
	case $response in
		0)
		clear
		reboot
		;;

		1)
		return 
		;;

		255)
		return
		;;
	esac
}

rrs_kernel_3_14()
{


	##################################################################
	# related documentation as to why this kernel upgrade is done:
	# 
	# hid-sony kernel module regression::
	# https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1326725
	#
	# Source article:
	# http://gameimps.com/ps3-controller-linux-usb-290
	#
	# Canonical warning: 
	# 
	##################################################################
	
	wget -P /tmp "http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.14-trusty/linux-headers-3.14.0-031400_3.14.0-031400.201403310035_all.deb"
	wget -P /tmp "http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.14-trusty/linux-headers-3.14.0-031400-generic_3.14.0-031400.201403310035_amd64.deb"
	wget -P /tmp "http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.14-trusty/linux-image-3.14.0-031400-generic_3.14.0-031400.201403310035_amd64.deb"

	cd /tmp
	dpkg -i linux-headers-3.14*.deb linux-image-3.14*.deb

	# inform user
	# dialog --msgbox "upgrading the kernel to 3.14 is complete, please reboot" 5 60
}

