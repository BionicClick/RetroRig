#!/bin/bash -x
#
# RetroRig menu modules
# This is a small script to copy over configuration files for emulators
# append a "-x" on the end above for debugging if need be
# Please report any errors via a pull request
# You can also reach me on twitter: @N3RD42
#

function gp_common()
{
	############################################################
	# Purpose: add files common to add gamepad configurations
	############################################################

	# offline artwork scrapper configs
	cp -v "$scriptdir/common/parserConfig.xml" "$rootdir/Artwork/MAME/"
	cp -v "$scriptdir/common/MAME.txt" "$rootdir/Artwork/MAME/"
	cp -v "$scriptdir/common/MAME synopsis RCB 201202.zip" "$rootdir/Artwork/MAME/"

}

function gp_ps3_blu()
{

	####################################################################
	# Function Description:
	# 
	# This function serves to copy the default emulator configurations
	# for the PS3 Controller over bluetooth
	####################################################################

	# clean any old configs
	h_clean_gamepad

	#mame
	# default path: /home/$USER/.mame
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MAME/default.cfg" "$config_home/.mame/cfg/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MAME/mame.ini" "$config_home/.mame/"
 
	# mess
	# default path: /home/$USER/.retrorig/.mess
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MESS/mess.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MESS/aes.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MESS/neocdz.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MESS/default.cfg" "$config_home/.mess/cfg/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MESS/neocdz.cfg" "$config_home/.mess/cfg/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MESS/aes.cfg" "$config_home/.mess/cfg/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MESS/default.cfg" "$config_home/.mess/cfg/"

	# mednafen
	# default path: /home/$USER/.retrorig/.mednafen
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/mednafen/mednafen-09x.cfg" "$config_home/.mednafen/"

	# mupen64plus
	# default path: /home/$USER/.retrorig/.config/mupen64plus
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/mupen64plus/mupen64plus.cfg" "$config_home/.config/mupen64plus/"

	# Dolphin (GameCube/Wii)
	# default path: /home/$USER/.retrorig/.dolphin-emu
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/Dolphin/GCPadNew.ini" "$config_home/.dolphin-emu/Config/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/Dolphin/Dolphin.ini" "$config_home/.dolphin-emu/Config/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/Dolphin/WiimoteNew.ini" "$config_home/.dolphin-emu/Config/"

	# PCSX2
	# base config folder
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PCSX2/inisOnePAD.ini" "$config_home/.config/pcsx2/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PCSX2/PCSX2-reg.ini" "$config_home/.config/pcsx2/"
	# inis
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PCSX2/inis/GSdx.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PCSX2/inis/OnePAD.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PCSX2/inis/PCSX2_ui.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PCSX2/inis/PCSX2_vm.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PCSX2/inis/spu2-x.ini" "$config_home/.config/pcsx2/inis/"

	# Stella
	# default path: /home/$USER/.config/mupen64plus
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/Stella/stellarc" "$config_home/.stella/"

	# PPSSPP
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PPSSPP/ppsspp.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PPSSPP/controls.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"

	# Gens GS (Sega CD/32X)
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/GensGS/gens.cfg" "$config_home/.gens/"

	###########################################################
	# Add emulator specifc control remaps here for qjoypad
	###########################################################
	# !!! Removed in favor of anitmicro since 0.9.5b !!!
	###########################################################

	# copy in fresh copy of RCB's config.xml to make replacements
	cp -v "$scriptdir/XBMC-cfgs/userdata/addon_data/script.games.rom.collection.browser/config.xml" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/"

	# blacklist xpad
	cp -v "$scriptdir/init-scripts/ps3_blu_controller/blacklist.conf" "/etc/modprobe.d/"

	###############################################################################################
	# Add emulator specifc control remaps here for AniMicro
	###############################################################################################
	# set vars for pre/post command for the PPSSPP emulator in RCB
	# We need this unforuntely, since the SDL/sixad mapping are so screwy, we need ot use 
	# keyboard.Esc instead of a button press (PS button is an axis in sixad anyway).
	# It is very important that you preceed '&amp;' with a backslash to escape the '&' character
	# so it is properly replaced. RCB requires '&amp' over the literal '&'.s
	###############################################################################################

	# copy in profiles for emulators (antimicro)
	cp -v "$scriptdir/gamepad-cfgs/ps3_blu_controller/antimicro_settings.ini" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_blu_controller/am_pcsx2_ps3_blu.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_blu_controller/am_mednafen_gen_ps3_blu.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_blu_controller/am_mednafen_ps1_ps3_blu.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_blu_controller/am_ppsspp_ps3_blu.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_blu_controller/am_gensgs_ps3_blu.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_blu_controller/am_dolphin_ps3_blu.joystick.xml" "$config_home/.config/antimicro/"

	#####################
	# PCSX2
	#####################

	old_pre="ps2_pre"
	old_post="ps2_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_pcsx2_ps3_blu.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
 

	#####################
	# PPSSPP
	#####################

	old_pre="psp_pre"
	old_post="psp_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_ppsspp_ps3_blu.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall antimicro"	
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	#####################
	# Mednafen (PSX/PS1)
	#####################

	old_pre="ps1_pre"
	old_post="ps1_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_ps1_ps3_blu.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	#####################
	# Mednafen (general)
	#####################

	old_pre="med_gen_pre"
	old_post="med_gen_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_gen_ps3_blu.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	#########################
	# Dolphin (Gamecube/Wii)
	#########################

	old_pre="dolphin_pre"
	old_post="dolphin_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_dolphin_ps3_blu.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"


	################################
	# Gens GS (Sega CD/32X/Genesis)
	################################

	old_pre="gens_pre"
	old_post="gens_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_gensgs_ps3_blu.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	# The PS3 pairing process should be handled interactively in a seperate function:
	gp_ps3_blu_main

}


function gp_ps3_blu_main()
{

	####################################################################
	# Function Description:
	# 
	# This function serves as the "main screen" for PS3 controller 
	# setups
	####################################################################

	###########################################################
	# Start controller pairing process
	###########################################################

	# start sixad service for pairing process
        echo "starting serives" | tee "$rootdir/logs/debug.log"
        echo "" | tee "$rootdir/logs/debug.log"
        # start service, but fork to background so when user exits script it is still running $
        $cmd_sixad_start | tee "$rootdir/logs/debug.log" &
        sleep 2s
        clear

	# Present small menu asking for number of controllers
	cmd=(dialog --backtitle "LibreGeek.org RetroRig Installer" \
		    --menu "Please select the number of PS3 controllers" 16 47 16)
	options=(1 "1"
	 	 2 "2"
	 	 3 "3"
	 	 4 "4")

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in

		1)
		
		# call pairing function to set current bluetooth MAC to Player 1
		n="1"
		ps3_pair_blu
		# Set up control assignments for emulators and XBMC control
		clear
		ps3_set_ctrl_assignments
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 1 Controller complete" 5 43 
		;;

		2)
		
		# call pairing function to set current bluetooth MAC to Player 1
		n="1"
		ps3_pair_blu
		# Set up control assignments for emulators and XBMC control
		clear
		ps3_set_ctrl_assignments
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 1 Controller complete" 5 43 
		
		# call pairing function to set current bluetooth MAC to Player 2
		n="2"
		ps3_pair_blu
		# Set up control assignments for emulators
		clear
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 2 Controller complete" 5 43
		;;

		3)

		# call pairing function to set current bluetooth MAC to Player 1
		n="1"
		ps3_pair_blu
		# Set up control assignments for emulators and XBMC control
		clear
		ps3_set_ctrl_assignments
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 1 Controller complete" 5 43
 
		# call pairing function to set current bluetooth MAC to Player 2
		n="2"
		ps3_pair_blu
		# Set up control assignments for emulators
		clear
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 2 Controller complete" 5 43

		# call pairing function to set current bluetooth MAC to Player 3
		n="3"
		ps3_pair_blu
		# Set up control assignments for emulators
		clear
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 3 Controller complete" 5 43  
		;;

		4)

		# call pairing function to set current bluetooth MAC to Player 1
		n="1"
		ps3_pair_blu
		# Set up control assignments for emulators and XBMC control
		clear
		ps3_set_ctrl_assignments
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 1 Controller complete" 5 43

		# call pairing function to set current bluetooth MAC to Player 2
		n="2"
		ps3_pair_blu
		# Set up control assignments for emulators
		clear
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 2 Controller complete" 5 43

		# call pairing function to set current bluetooth MAC to Player 3
		n="3"
		ps3_pair_blu
		# Set up control assignments for emulators
		clear
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 3 Controller complete" 5 43

		# call pairing function to set current bluetooth MAC to Player 4
		n="4"
		ps3_pair_blu
		# Set up control assignments for emulators
		clear
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 4 Controller complete" 5 43    
		;;

		esac
	done

	###########################################################
	# End controller pairing process
	###########################################################

	clear
	# start the service at boot time
	sixad --boot-yes

	# replace specific user paths that emulators and files may use
	h_emu_user_fixes

	#####################################################################################
	# THIS FUNCTION SECTION IS NOT USED AT THE MOMENT, MORE TESTING IS NEEDED!!!
	#####################################################################################

	# copy in the gp_autodetect_xbmc.sh template file, and change the gamepad type
	# new_controller_type="ps3_blu"
	# cp -v "$scriptdir/XBMC-cfgs/extra/gp_autodetect_xbmc.sh" "/usr/share/applications/" 
	# sed -i "s|controller_temp|$new_controller_type|g" "/usr/share/applications/gp_autodetect_xbmc.sh"

	# correct permissions since we install using sudo access
	h_correct_perms	
}

function ps3_set_ctrl_assignments()
{
	####################################################################
	# Function Description:
	# 
	# This function sets the control methods for XBMC navigation
	# and assigns the unique MAC address of P1 to use as primary
	####################################################################

	# inform user
	echo -e "Assigning controls to XBMC / applicable emulators based\non controller MAC Address"
	sleep 2s

	# Set PS3 Blu MAC value with the "joydetect" C program
	# Credit for this goes entirely to http://www.reddit.com/user/ElFeesho
	
	device_id=`joydetect /dev/input/js0 2>/dev/null`
	if [ -n "$device_id" ]; then 
		echo "found controller on device 0"
		PS3_MAC_BLU=$(echo $device_id | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
		device_index_PS3=0
	else
		device_id=`joydetect /dev/input/js1 2>/dev/null`
		if [ -n "$device_id" ]; then  
			echo "found controller on device 1"
			PS3_MAC_BLU=$(echo $device_id | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
			device_index_PS3=1
		else  
			device_id=`joydetect /dev/input/js2 2>/dev/null`
			if [ -n "$device_id" ]; then  
				echo "found controller on device 2"
				PS3_MAC_BLU=$(echo $device_id | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
				device_index_PS3=2
			else  
				device_id=`joydetect /dev/input/js3 2>/dev/null`
				if [ -n "$device_id" ]; then  
					echo "found controller on device 3"
					PS3_MAC_BLU=$(echo $device_id | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
					device_index_PS3=3
				else  
					echo "No device found. Please try again under RetroRig Settings/Change Gamepad Type"
				fi
			fi
		fi
	fi
	echo -e "\nController ID/MAC Address applied to XBMC controls was:\n$PS3_MAC_BLU \n"

	# copy over default keyboard file:
	cp "$scriptdir/gamepad-cfgs/ps3_blu_controller/keyboard.xml" "$xbmc_home/userdata/keymaps/"

	# Copy our keymap to the regular .xbmc dotfile directory if keyboard.xml exists:
	if [[ -f "$home/.xbmc/userdata/keymaps/keyboard.xml" ]]; then
		# back up current file
		cp "$home/.xbmc/userdata/keymaps/keyboard.xml" "$home/.xbmc/userdata/keymaps/keyboard.xml.old"
		# copy in keymap
		cp "$scriptdir/gamepad-cfgs/ps3_blu_controller/keyboard.xml" "$home/.xbmc/userdata/keymaps/"
	fi

	# First grab MAC Addresses:
	# In the config file, the MAC is set to 00:00:00:00:00:00

	# set MAC values
	PS3_MAC_OLD="00:00:00:00:00:00"

	# Replace MAC Address for ***CONTROLLER 1 ONLY!*** This will be used to control XBMC		
	sed -i "s|$PS3_MAC_OLD|$PS3_MAC_BLU|g" "$xbmc_home/userdata/keymaps/keyboard.xml"
	sleep 2s

}

function ps3_set_emulator_ids()
{
	####################################################################
	# Function Description:
	# 
	# Set PS3 Blu MAC value with the "joydetect" C program for Dolphin 
	# controller assignments The MAC address of the unique controller is 
	# based off of $n, the current controller number being set by 
	# gp_ps3_blu_main, and later paired
	#################################################################### 

	# Stella Notes:
	# MAC ID temp placeholders seem "backwards" in stellarc due to P2 configuration showing at the top of the
	# configuration files set of joymaps, rather than the bottom 

	# PCSX2 Notes:
	# The "am_pcsx2_ps3_blu.joystick.xml" gamepad config file for antimicro contains a PS3 Bluetooth MAC ID
	# However, it is noted that it is "included for informational purposes only", so a sed swap should not
	# Be necessary
 
	if [ $n == "1" ]; then
		i=$((device_index_PS3+0))

		# Dolphin
		dolphin_MAC_BLU=$(joydetect /dev/input/js$i | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
		# Stella (supports only 2 players )
		Stella_MAC_BLU=$(joydetect /dev/input/js$i | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
		sed -i "s|p1_stella_MAC_temp|$Stella_MAC_BLU|g" "$config_home/.stella/stellarc"

	elif [ $n == "2" ]; then
		i=$((device_index_PS3+1))

		# Dolphin
		dolphin_MAC_BLU=$(joydetect /dev/input/js$i | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
		# Stella (supports only 2 players )
		Stella_MAC_BLU=$(joydetect /dev/input/js$i | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
		sed -i "s|p2_stella_MAC_temp|$Stella_MAC_BLU|g" "$config_home/.stella/stellarc"

	elif [ $n == "3" ]; then
	        i=$((device_index_PS3+2))

		# Dolphin
		dolphin_MAC_BLU=$(joydetect /dev/input/js$i | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')

	elif [ $n == "4" ]; then
		i=$((device_index_PS3+3))

		# Dolphin
		dolphin_MAC_BLU=$(joydetect /dev/input/js$i | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')

	else
		echo "Error settings MAC/ID for emulator"

	fi

	echo -e "Controller ID/MAC Address applied to the Dolphin emulator Controller $n was:\n$dolphin_MAC_BLU"
	echo -e "\nController ID/MAC Address applied to the Stella emulator Controller $n was:\n$Stella_MAC_BLU"

	# Assign controller ID
	sed -i "s|MAC_TEMP_$n|$dolphin_MAC_BLU|g" "$config_home/.dolphin-emu/Config/GCPadNew.ini"
	sed -i "s|MAC_TEMP_$n|$dolphin_MAC_BLU|g" "$config_home/.dolphin-emu/Config/WiimoteNew.ini"
	
	sleep 2

}

function enable_autostart_RetroRig()
{
	####################################################################
	#
	# Function Description:
	# 
	# enable / disable auto start function for RetroRig
	#
	#################################################################### 

	clear
	
	PS3_USB=$(grep -m 1 -Ee "autostartXBMC_PS3_USB" "/usr/share/applications/gp_autodetect_xbmc.sh")
	PS3_BT=$(grep -m 1 -Ee "autostartXBMC_PS3_BT" "/usr/share/applications/gp_autodetect_xbmc.sh")
	
	#default is disabled
	autostart=disabled
	
	dialog --title "Confirm yes/no" \
	--backtitle "Auto Start RetroRig" \
	--yesno "Do you want to have RetroRig started automatically for the first gamepad being switch on? (Only PS3 ctrl.)"  6 60
	# Get exit status
	# 0 means user hit [yes] button.
	# 1 means user hit [no] button.
	# 255 means user hit [Esc] key.
	response=$?
	case $response in
		0)
			autostart=enabled
		;;

		1)
			autostart=disabled
		;;

		255)
			autostart=disabled
		;;
	esac
	
	if [ "$autostart" == "enabled" ]; then
		sed -i "s|$PS3_USB|autostartXBMC_PS3_USB=enabled|g" "/usr/share/applications/gp_autodetect_xbmc.sh"
		sed -i "s|$PS3_BT|autostartXBMC_PS3_BT=enabled|g" "/usr/share/applications/gp_autodetect_xbmc.sh"
	else
		sed -i "s|$PS3_USB|autostartXBMC_PS3_USB=disabled|g" "/usr/share/applications/gp_autodetect_xbmc.sh"
		sed -i "s|$PS3_BT|autostartXBMC_PS3_BT=disabled|g" "/usr/share/applications/gp_autodetect_xbmc.sh"
	fi
	
	clear
	$cmd_rescan_restart
	sleep 2
}

function wii_motion_controller_for_dolphin()
{
	####################################################################
	#
	# Function Description:
	# 
	# configure dolphin to use a Wii motion controller for Wii games
	#
	#################################################################### 

	#native or emulated Wii controller 1=emulated 2=native
	clear
	src=1
	dialog --title "Confirm yes/no" \
	--backtitle "Wii game controller" \
	--yesno " Do you want to use a native controller for Wii games? "  6 60

	# Get exit status
	# 0 means user hit [yes] button.
	# 1 means user hit [no] button.
	# 255 means user hit [Esc] key.
	response=$?
	case $response in
		0)
		clear
		src=2
		dialog --msgbox "For Wii games, controls have been mapped to a native motion controller. Press 1+2 for older Wii controller, or the small button in the battery compartement to activate the controller every time after game start. Navigation in XBMC, game launch and exit for Wii games, as for all other games, is still handled by your primary controller. This applies also to the save state and load state functions. Use your primary controller in parallel to your Wii controller to save and load game states. " 14 60
		;;

		1)
			src=1 
		;;

		255)
			src=1
		;;
	esac

	sed -i "s|PLAYER_SRC|$src|g" "$config_home/.dolphin-emu/Config/WiimoteNew.ini"
}

function ps3_pair_blu()
{
	####################################################################
	# Function Description:
	# 
	# Set and pair up player controller interactively
	####################################################################


	dialog --msgbox "Please plug in these items now:\n\n1)The USB cable\n2)PS3 controller $n \n
3)Bluetooth dongle\n\nAdditional controllers can be added in the settings menu"  12 40

	clear
	# Grab player 1 controller MAC Address of wired device
	echo "Setting up Playstation 3 Sixaxis (bluetooth) [Player $n]" | tee "$rootdir/logs/debug.log"
	sleep 2s

	# Pair controller with logging
	sixpair | tee "$rootdir/logs/debug.log"
	sleep 2s

	# Inform player 1 controller user to disconnect USB cord
	dialog --msgbox "Please disconnect the USB cable and press the PS Button now. The appropriate \
LED for player $n should be lit. If it is not, please hold in the PS button to turn it off, then back on.\n\nThere is no need to reboot to \
fully enable the controller(s)" 12 60

}

function gp_ps3_usb()
{
	####################################################################
	# Function Description:
	# 
	# Assign and modify emulator configurations for PS3 Controller over
	# USB
	####################################################################

	# clean any old configs
	h_clean_gamepad

	# MAME
	# default path: /home/$USER/.retrorig/.mame
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MAME/default.cfg" "$config_home/.mame/cfg"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MAME/mame.ini" "$config_home/.mame/"

	# mess
	# default path: /home/$USER/.retrorig/.mednafen/mednafen.cfg
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MESS/mess.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MESS/aes.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MESS/neocdz.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MESS/default.cfg" "$config_home/.mess/cfg"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MESS/neocdz.cfg" "$config_home/.mess/cfg"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MESS/aes.cfg" "$config_home/.mess/cfg"

	# mednafen
	# default path: /home/$USER/.retrorig/.mednafen/mednafen.cfg
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/mednafen/mednafen-09x.cfg" "$config_home/.mednafen"

	# mupen64plus
	# default path: /home/$USER/.retrorig/.config/mupen64plus
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/mupen64plus/mupen64plus.cfg" "$config_home/.config/mupen64plus/"

	# Dolphin (GameCube/Wii)
	# default path: /home/$USER/.retrorig/.dolphin-emu
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/Dolphin/GCPadNew.ini" "$config_home/.dolphin-emu/Config"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/Dolphin/Dolphin.ini" "$config_home/.dolphin-emu/Config"

	# Stella
	# default path: /home/$USER/.retrorig/.config/mupen64plus
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/Stella/stellarc" "$config_home/.stella/"

	# PCSX2
	# base config folder
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PCSX2/inisOnePAD.ini" "$config_home/.config/pcsx2/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PCSX2/PCSX2-reg.ini" "$config_home/.config/pcsx2/"
	# inis
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PCSX2/inis/GSdx.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PCSX2/inis/OnePAD.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PCSX2/inis/PCSX2_ui.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PCSX2/inis/PCSX2_vm.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PCSX2/inis/spu2-x.ini" "$config_home/.config/pcsx2/inis/"

	# PPSSPP
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PPSSPP/ppsspp.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PPSSPP/controls.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"

	# Gens GS (Sega CD/32X)
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/GensGS/gens.cfg" "$config_home/.gens/"

	##############################################################
	# Set system objects
	##############################################################

	# inject init script and default config for xboxdrv
	cp -v "$scriptdir/init-scripts/ps3_usb_controller/xboxdrv" "/etc/init.d/"
	cp -v "$scriptdir/init-scripts/ps3_usb_controller/default/xboxdrv" "/etc/default/xboxdrv"

	# Copy our keymap to the regular .xbmc dotfile directory if keyboard.xml exists:
	if [[ -f "$home/.xbmc/userdata/keymaps/keyboard.xml" ]]; then
		# back up current file
		cp -v "$home/.xbmc/userdata/keymaps/keyboard.xml" "$home/.xbmc/userdata/keymaps/keyboard.xml.old"
		# copy in keymap
		cp "$scriptdir/gamepad-cfgs/ps3_usb_controller/keyboard.xml" "$home/.xbmc/userdata/keymaps/"
	fi
	
	# blacklist xpad
	cp -v "$scriptdir/init-scripts/ps3_usb_controller/blacklist.conf" "/etc/modprobe.d/"

	# copy over default keyboard file:
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/keyboard.xml" "$xbmc_home/userdata/keymaps/keyboard.xml"

	##############################################################
	# Set number of controllers for /etc/default/xboxdrv
	##############################################################

	# grab the current number of controlls from file
	cont_num_org=$(grep "CONTROLLER_NUM=" "/etc/default/xboxdrv")

	# inform user that you must have controller connected or restart
	dialog --msgbox "The xboxdrv userland module detects the number of USB PS3 controllers connected \
when it starts. Therefore, we must specify how many you have connected or want to use. \
You must reboot to have these changes take effect. If you tell xboxdrv I have 3 controllers, when you only have one, \
the service may fail to start correctly.\n\nPlease see /etc/default/xboxdrv for more. Press the PS Button after \
RetorRig loads to use the gamepad" 14 60

	# Present small menu asking for number of controllers
	cmd=(dialog --backtitle "LibreGeek.org RetroRig Installer" \
		    --menu "Please select the number of USB PS3 controllers" 16 47 16)
	options=(1 "1"
	 	 2 "2"
	 	 3 "3"
	 	 4 "4")

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in

		1)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=1|g" "/etc/default/xboxdrv"
		;;

		2)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=2|g" "/etc/default/xboxdrv"
		;;

		3)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=3|g" "/etc/default/xboxdrv"
		;;

		4)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=4|g" "/etc/default/xboxdrv"
		;;

		esac
	done

	###########################################################
	# Add emulator specifc control remaps here for qjoypad
	###########################################################
	# !!! Removed in favor of anitmicro since 0.9.5b !!!
	###########################################################

	# copy in fresh copy of RCB's config.xml to make replacements
	cp -v "$scriptdir/XBMC-cfgs/userdata/addon_data/script.games.rom.collection.browser/config.xml" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/"

	# blacklist xpad
	cp -v "$scriptdir/init-scripts/ps3_blu_controller/blacklist.conf" "/etc/modprobe.d/"

	###############################################################################################
	# Add emulator specifc control remaps here for AniMicro
	###############################################################################################
	# set vars for pre/post command for the PPSSPP emulator in RCB
	# We need this unforuntely, since the SDL/sixad mapping are so screwy, we need ot use 
	# keyboard.Esc instead of a button press (PS button is an axis in sixad anyway).
	# It is very important that you preceed '&amp;' with a backslash to escape the '&' character
	# so it is properly replaced. RCB requires '&amp' over the literal '&'.s
	###############################################################################################

	# copy in profiles for emulators (antimicro)
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/antimicro_settings.ini" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/am_pcsx2_ps3_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/am_mednafen_gen_ps3_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/am_mednafen_ps1_ps3_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/am_dolphin_ps3_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/am_ppsspp_ps3_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/am_gensgs_ps3_blu.joystick.xml" "$config_home/.config/antimicro/"

	#####################
	# PCSX2
	#####################

	old_pre="ps2_pre"
	old_post="ps2_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_pcsx2_ps3_usb.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
 

	#####################
	# PPSSPP
	#####################

	old_pre="psp_pre"
	old_post="psp_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_ppsspp_ps3_usb.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	#####################
	# Mednafen (PSX/PS1)
	#####################

	old_pre="ps1_pre"
	old_post="ps1_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_ps1_ps3_usb.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	#####################
	# Mednafen (general)
	#####################

	old_pre="med_gen_pre"
	old_post="med_gen_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_gen_ps3_usb.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	#########################
	# Dolphin (GameCube/Wii)
	#########################

	old_pre="dolphin_pre"
	old_post="dolphin_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_dolphin_ps3_usb.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	################################
	# Gens GS (Sega CD/32X/Genesis)
	################################

	old_pre="gens_pre"
	old_post="gens_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_gensgs_ps3_usb.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	#update init scripts for xboxdrv
	update-rc.d xboxdrv defaults

	# start the xboxdrv service
	# disable for now, hangs script completion running in background
	# $cmd_xboxdrv_start &

	# copy in the gp_autodetect_xbmc.sh template file, and change the gamepad type 
	# Testing ONLY for gp_autodetect_xbmc.sh.testing
	# new_controller_type="ps3_usb"
	# cp -v "$scriptdir/XBMC-cfgs/extra/gp_autodetect_xbmc.sh" "/usr/share/applications/" 
	# sed -i "s|controller_temp|$new_controller_type|g" "/usr/share/applications/gp_autodetect_xbmc.sh"

	# replace specific user paths that emulators and files may use
	h_emu_user_fixes

	# correct permissions since we install using sudo access
	h_correct_perms

	# Let the user know about reboot
	dialog --msgbox "Please reboot to fully enable the controller!"  5 60

	sixad --boot-no
}

function gp_x360_wireless()
{
	####################################################################
	# Function Description:
	# 
	# Assign and modify emulator configurations for wireless 
	# X360 Controller
	####################################################################

	# clean any old configs
	h_clean_gamepad

	#######################################################
	# Add controller specifc emulator controlos
	#######################################################

	#mame
	# default path: /home/$USER/.mame
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MAME/default.cfg" "$config_home/.mame/cfg"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MAME/mame.ini" "$config_home/.mame/"

	# mess
	# default path: /home/$USER/.mednafen/mednafen.cfg
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MESS/mess.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MESS/aes.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MESS/neocdz.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MESS/default.cfg" "$config_home/.mess/cfg"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MESS/neocdz.cfg" "$config_home/.mess/cfg"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MESS/aes.cfg" "$config_home/.mess/cfg"

	# mednafen
	# default path: /home/$USER/.mednafen/mednafen.cfg
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/mednafen/mednafen-09x.cfg" "$config_home/.mednafen/"

	# mupen64plus
	# default path: /home/$USER/.config/mupen64plus
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/mupen64plus/mupen64plus.cfg" "$config_home/.config/mupen64plus/"

	# Dolphin (GameCube/Wii)
	# default path: /home/$USER/.retrorig/.dolphin-emu
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/Dolphin/GCPadNew.ini" "$config_home/.dolphin-emu/Config/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/Dolphin/Dolphin.ini" "$config_home/.dolphin-emu/Config/"

	# PCSX2
	# base config folder
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PCSX2/inisOnePAD.ini" "$config_home/.config/pcsx2/inisOnePAD.ini"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PCSX2/PCSX2-reg.ini" "$config_home/.config/pcsx2/PCSX2-reg.ini"
	# inis
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PCSX2/inis/GSdx.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PCSX2/inis/OnePAD.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PCSX2/inis/PCSX2_ui.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PCSX2/inis/PCSX2_vm.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PCSX2/inis/spu2-x.ini" "$config_home/.config/pcsx2/inis/"

	#Stella
	#default path: /home/$USER/.config/mupen64plus
	#Main config
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/Stella/stellarc" "$config_home/.stella/"

	# PPSSPP
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PPSSPP/ppsspp.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PPSSPP/controls.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"

	# Gens GS (Sega CD/32X)
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/GensGS/gens.cfg" "$config_home/.gens/"

	#######################################################
	# configure xboxdrv for 360 gamepad (wireless)
	#######################################################
	
	#blacklist xpad
	cp -v "$scriptdir/init-scripts/x360_wireless_controller/blacklist.conf" "/etc/modprobe.d/"

	#inject init script and default config
	cp -v "$scriptdir/init-scripts/x360_wireless_controller/xboxdrv" "/etc/init.d/"
	cp -v "$scriptdir/init-scripts/x360_wireless_controller/default/xboxdrv" "/etc/default/xboxdrv"

	# copy keyboard.xml file for XBMC. Button id numbers are totally diffferent, due to the use of 
	# the use-dpad-as-button, and use-trigger-as-button options used.
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/keyboard.xml" "$xbmc_home/userdata/keymaps"

	# Copy our keymap to the regular .xbmc dotfile directory if keyboard.xml exists:
	if [[ -f "$home/.xbmc/userdata/keymaps/keyboard.xml" ]]; then
		# back up current file
		cp -v "$home/.xbmc/userdata/keymaps/keyboard.xml" "$home/.xbmc/userdata/keymaps/keyboard.xml.old"
		# copy in keymap
		cp "$scriptdir/gamepad-cfgs/x360_wireless_controller/keyboard.xml" "$home/.xbmc/userdata/keymaps/"
	fi

	##############################################################
	# Set number of controllers for /etc/default/xboxdrv
	##############################################################

	# grab the current number of controlls from file
	cont_num_org=$(grep "CONTROLLER_NUM=" "/etc/default/xboxdrv")

	# inform user that you must have controller connected or restart
	dialog --msgbox "The xboxdrv userland module detects the number of USB PS3 controllers connected \
when it starts. Therefore, we must specify how many you have connected or want to use. \
You must reboot to have these changes take effect. If you tell xboxdrv I have 3 controllers, when you only have one, \
the service may fail to start correctly.\n\nPlease see /etc/default/xboxdrv for more. Press the PS Button after \
RetorRig loads to use the gamepad" 14 60

	# Present small menu asking for number of controllers
	cmd=(dialog --backtitle "LibreGeek.org RetroRig Installer" \
		    --menu "Please select the number of Xbox 360 controllers" 16 47 16)
	options=(1 "1"
	 	 2 "2"
	 	 3 "3"
	 	 4 "4")

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in

		1)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=1|g" "/etc/default/xboxdrv"
		;;

		2)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=2|g" "/etc/default/xboxdrv"
		;;

		3)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=3|g" "/etc/default/xboxdrv"
		;;

		4)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=4|g" "/etc/default/xboxdrv"
		;;

		esac
	done

	###########################################################
	# Add emulator specifc control remaps here for qjoypad
	###########################################################
	# !!! Removed in favor of anitmicro since 0.9.5b !!!
	###########################################################

	# copy in fresh copy of RCB's config.xml to make replacements
	cp -v "$scriptdir/XBMC-cfgs/userdata/addon_data/script.games.rom.collection.browser/config.xml" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/"

	# blacklist xpad
	cp -v "$scriptdir/init-scripts/x360_wireless_controller/blacklist.conf" "/etc/modprobe.d/"

	###########################################################
	# Add emulator specifc control remaps here for AniMicro
	###########################################################
	# Note: In due time, AntiMicro may replace qjoypad for all
	# emulator control hotswaps for gamepads
	###########################################################

	# copy in profiles for emulators (antimicro)
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/antimicro_settings.ini" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/am_pcsx2_x360_wireless.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/am_mednafen_gen_x360_wireless.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/am_mednafen_ps1_x360_wireless.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/am_ppsspp_x360_wireless.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/am_dolphin_x360_wireless.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/am_gensgs_x360_wireless.joystick.xml" "$config_home/.config/antimicro/"

	#####################
	# PCSX2
	#####################

	old_pre="ps2_pre"
	old_post="ps2_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_pcsx2_x360_wireless.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	#####################
	# Mednafen (general)
	#####################

	old_pre="med_gen_pre"
	old_post="med_gen_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_gen_x360_wireless.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	#####################
	# Mednafen (PS1/PSX)
	#####################

	old_pre="ps1_pre"
	old_post="ps1_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_ps1_x360_wireless.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	#####################
	# PPSSPP
	#####################

	old_pre="psp_pre"
	old_post="psp_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_ppsspp_x360_wireless.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	###########################
	# Dolphin  (GameCube/Wii)
	###########################

	old_pre="dolphin_pre"
	old_post="dolphin_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_ppsspp_x360_wireless.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	################################
	# Gens GS (Sega CD/32X/Genesis)
	################################

	old_pre="gens_pre"
	old_post="gens_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_gensgs_x360_wireless.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"


	#update init scripts for xboxdrv
	update-rc.d xboxdrv defaults

	# start the xboxdrv service
	# disable for now, hangs script completion running in background
	# service xboxdrv start &

	#####################################################################################
	# THIS FUNCTION SECTION IS NOT USED AT THE MOMENT, MORE TESTING IS NEEDED!!!
	#####################################################################################
	
	# new_controller_type="x360_wireless"
	# Testing ONLY for gp_autodetect_xbmc.sh.testing
	# cp -v "$scriptdir/XBMC-cfgs/extra/gp_autodetect_xbmc.sh" "/usr/share/applications/" 
	# sed -i "s|controller_temp|$new_controller_type|g" "/usr/share/applications/gp_autodetect_xbmc.sh"

	# replace specific user paths that emulators and files may use
	h_emu_user_fixes

	# correct permissions since we install using sudo access
	h_correct_perms

	# Let the user know about reboot
	dialog --msgbox "Please reboot to fully enable the controller(s)."  5 52
	
	sixad --boot-no
}

function gp_x360_usb()
{
	####################################################################
	# Function Description:
	# 
	# Assign and modify emulator configurations for USB / Wired 
	# X360 Controller
	####################################################################

	# clean any old configs
	h_clean_gamepad

	#######################################################
	# Add controller specifc emulator controlos
	#######################################################

	#mame
	# default path: /home/$USER/.mame
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MAME/default.cfg" "$config_home/.mame/cfg"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MAME/mame.ini" "$config_home/.mame/"

	# mess
	# default path: /home/$USER/.mednafen/mednafen.cfg
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MESS/mess.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MESS/aes.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MESS/neocdz.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MESS/default.cfg" "$config_home/.mess/cfg/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MESS/neocdz.cfg" "$config_home/.mess/cfg/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MESS/aes.cfg" "$config_home/.mess/cfg/"

	# mednafen
	# default path: /home/$USER/.mednafen/mednafen.cfg
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/mednafen/mednafen-09x.cfg" "$config_home/.mednafen/"

	# mupen64plus
	# default path: /home/$USER/.config/mupen64plus
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/mupen64plus/mupen64plus.cfg" "$config_home/.config/mupen64plus/"

	# Dolphin (GameCube/Wii)
	# default path: /home/$USER/.retrorig/.dolphin-emu
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller//Dolphin/GCPadNew.ini" "$config_home/.dolphin-emu/Config/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller//Dolphin/Dolphin.ini" "$config_home/.dolphin-emu/Config/"

	# PCSX2
	# base config folder
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PCSX2/inisOnePAD.ini" "$config_home/.config/pcsx2/inisOnePAD.ini"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PCSX2/PCSX2-reg.ini" "$config_home/.config/pcsx2/PCSX2-reg.ini"
	# inis
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PCSX2/inis/GSdx.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PCSX2/inis/OnePAD.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PCSX2/inis/PCSX2_ui.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PCSX2/inis/PCSX2_vm.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PCSX2/inis/spu2-x.ini" "$config_home/.config/pcsx2/inis/"

	#Stella
	#default path: /home/$USER/.config/mupen64plus
	#Main config
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/Stella/stellarc" "$config_home/.stella/"

	# PPSSPP
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PPSSPP/ppsspp.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PPSSPP/controls.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"

	# Gens GS (Sega CD/32X)
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/GensGS/gens.cfg" "$config_home/.gens/"

	############################################
	# configure xboxdrv for 360 gamepad (USB)
	############################################
	
	#blacklist xpad
	cp -v "$scriptdir/init-scripts/x360_usb_controller/blacklist.conf" "/etc/modprobe.d/"

	#inject init script and default config
	cp -v "$scriptdir/init-scripts/x360_usb_controller/xboxdrv" "/etc/init.d/"
	cp -v "$scriptdir/init-scripts/x360_usb_controller/default/xboxdrv" "/etc/default/xboxdrv"

	# copy keyboard.xml file for XBMC. Button id numbers are totally diffferent, due to the use of 
	# the use-dpad-as-button, and use-trigger-as-button options used.
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/keyboard.xml" "$xbmc_home/userdata/keymaps"

	# Copy our keymap to the regular .xbmc dotfile directory if keyboard.xml exists:
	if [[ -f "$home/.xbmc/userdata/keymaps/keyboard.xml" ]]; then
		# back up current file
		cp -v "$home/.xbmc/userdata/keymaps/keyboard.xml" "$home/.xbmc/userdata/keymaps/keyboard.xml.old"
		# copy in keymap
		cp "$scriptdir/gamepad-cfgs/x360_usb_controller/keyboard.xml" "$home/.xbmc/userdata/keymaps/"
	fi

	##############################################################
	# Set number of controllers for /etc/default/xboxdrv
	##############################################################

	# grab the current number of controlls from file
	cont_num_org=$(grep "CONTROLLER_NUM=" "/etc/default/xboxdrv")

	# inform user that you must have controller connected or restart
	dialog --msgbox "The xboxdrv userland module detects the number of USB PS3 controllers connected \
when it starts. Therefore, we must specify how many you have connected or want to use. \
Please reboot to have these changes take effect! If you tell xboxdrv I have 3 controllers, when you only have one, \
the service may fail to start correctly.\n\nPlease see /etc/default/xboxdrv for more. Press the PS Button after \
RetorRig loads to use the gamepad" 14 60

	# Present small menu asking for number of controllers
	cmd=(dialog --backtitle "LibreGeek.org RetroRig Installer" \
		    --menu "Please select the number of USB PS3 controllers" 16 47 16)
	options=(1 "1"
	 	 2 "2"
	 	 3 "3"
	 	 4 "4")

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in

		1)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=1|g" "/etc/default/xboxdrv"
		;;

		2)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=2|g" "/etc/default/xboxdrv"
		;;

		3)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=3|g" "/etc/default/xboxdrv"
		;;

		4)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=4|g" "/etc/default/xboxdrv"
		;;

		esac
	done

	###########################################################
	# Add emulator specifc control remaps here for qjoypad
	###########################################################
	# !!! Removed in favor of anitmicro since 0.9.5b !!!
	###########################################################

	# copy in fresh copy of RCB's config.xml to make replacements
	cp -v "$scriptdir/XBMC-cfgs/userdata/addon_data/script.games.rom.collection.browser/config.xml" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/"

	# blacklist xpad
	cp -v "$scriptdir/init-scripts/x360_usb_controller/blacklist.conf" "/etc/modprobe.d/"

	###########################################################
	# Add emulator specifc control remaps here for AniMicro
	###########################################################
	# Note: In due time, AntiMicro may replace qjoypad for all
	# emulator control hotswaps for gamepads
	###########################################################

	# copy in profiles for emulators (antimicro)
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/antimicro_settings.ini" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/am_pcsx2_x360_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/am_mednafen_gen_x360_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/am_mednafen_ps1_x360_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/am_ppsspp_x360_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/am_dolphin_x360_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/am_gensgs_x360_usb.joystick.xml" "$config_home/.config/antimicro/"

	#####################
	# PCSX2
	#####################

	old_pre="ps2_pre"
	old_post="ps2_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_pcsx2_x360_usb.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	#####################
	# Mednafen (general)
	#####################

	old_pre="med_gen_pre"
	old_post="med_gen_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_gen_x360_usb.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	#####################
	# Mednafen (PS1/PSX)
	#####################

	old_pre="ps1_pre"
	old_post="ps1_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_ps1_x360_usb.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	#####################
	# PPSSPP
	#####################

	old_pre="psp_pre"
	old_post="psp_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_ppsspp_x360_usb.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	##########################
	# Dolphin (GameCube/Wii)
	##########################

	old_pre="dolphin_pre"
	old_post="dolphin_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_dolphin_x360_usb.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	################################
	# Gens GS (Sega CD/32X/Genesis)
	################################

	old_pre="gens_pre"
	old_post="gens_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_gensgs_x360_usb.joystick.xml \&amp;"
	# The line below is only for good measure
	new_post="killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"
	sed -i "s|$old_post|$new_post|g" "$xbmc_home/userdata/addon_data/script.games.rom.collection.browser/config.xml"

	# update init scripts for xboxdrv
	update-rc.d xboxdrv defaults

	# start the xboxdrv service
	# disable for now, hangs script completion running in background
	# $cmd_xboxdrv_start &

	#####################################################################################
	# THIS FUNCTION SECTION IS NOT USED AT THE MOMENT, MORE TESTING IS NEEDED!!!
	#####################################################################################

	# Testing ONLY for gp_autodetect_xbmc.sh.testing
	# new_controller_type="x360_wired"
	# cp -v "$scriptdir/XBMC-cfgs/extra/gp_autodetect_xbmc.sh" "/usr/share/applications/" 
	# sed -i "s|controller_temp|$new_controller_type|g" "/usr/share/applications/gp_autodetect_xbmc.sh"

	# replace specific user paths that emulators and files may use
	h_emu_user_fixes

	# correct permissions since we install using sudo access
	h_correct_perms

	# Let the user know about LED's
	dialog --msgbox "Using wired controllers, the pairing is in sequence. If you \
received the wrong LED, unplug and plug the USB cable back in until you get the correct LED number. Please reboot to fully enable the controller"  10 40

	sixad --boot-no
}
