#!/bin/bash
#
# RetroRig helper modules
# This is a small script to copy over configuration files for emulators
# append a "-x" on the end above for debugging if need be
# Please report any errors via a pull request
# You can also reach me on twitter: @N3RD42
#

function h_plugin-switcher()

{

cmd=(dialog --backtitle "LibreGeek.org RetroRig Installer" --menu "Plugin Configuration Menu" 16 0 16)
options=(1 "Current configuration"
	 2 "Mupen64plus"
	 3 "Back to settings menu"  
	 4 "Back to main menu")

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in

		1)
		#echo curent plugin settings
		#mupen64plus
		echo "Mupen64plus:" > res.txt
		grep -i "VideoPlugin = " "$home/.config/mupen64plus/mupen64plus.cfg" >> "$scriptdir/logs/res.txt"
		echo "" >> "$scriptdir/logs/res.txt"
		#Stella
		echo "Stella:" >> "$scriptdir/logs/res.txt"
		grep -i "tia_filter" "$home/.stella/stellarc" >> "$scriptdir/logs/res.txt"
		echo "" >> res.txt
		#report current resolution
		dialog --textbox res.txt 33 0
		#remove text file
		rm "$scriptdir/logs/res.txt"	
		;;

		2)
		#cfg_mupen 	  	 	
		;;

		3)
		return 	  	 	
		;;

		4)
		_main 	 	
		;;
	esac
	done

}

function h_file_loader()
{

	dialog --msgbox "Usage:\n\n(spacebar)              select file\n(double-tap spacebar) \
	  enter new directory\n(Enter)                 confirm selection\n(Arrow keys)            Navigate" 11 48
	folder=$(dialog --stdout --cr-wrap --title "Please choose a file" --fselect "$home/" 14 48)

	# debugging only
	echo "${folder} file chosen." >> "$rootdir/logs/debug.log"
}


function h_rom_loader()
{

cmd=(dialog --backtitle "LibreGeek.org RetroRig Installer" --menu "Load ROMs for which system?" 19 32 24)
options=(1 "Atari 2600" 
	 2 "NES" 
	 3 "SNES" 
	 4 "Nintendo 64"
	 5 "MAME"
	 6 "Sega Master System"
	 7 "Sega Game Gear"
	 8 "GBC"
	 9 "GBC"
	 10 "TurboGraphx 16"
	 11 "Neo-Geo CDZ"
	 12 "Exit ROM Loader")

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in
		1)
		#call file loader  	
		h_file_loader
		#copy Atari ROMs
		cp -Rv "$folder"/* "$rootdir/ROMs/Atari 2600/"
		;;

		2)  
		h_file_loader
		cp -Rv "$folder"/* "$rootdir/ROMs/NES/"
		;;

		3)
		#call file loader  	
		h_file_loader
		#copy SNES ROMs
		cp -Rv "$folder"/* "$rootdir/ROMs/SNES/"
		;;

		4)
		#call file loader  	
		h_file_loader
		#copy N64 ROMs
		cp -Rv "$folder"/* "$rootdir/ROMs/N64/"
		;;

		5)
		#call file loader  	
		h_file_loader
		#copy MAME ROMs
		cp -Rv "$folder"/* "$rootdir/ROMs/MAME/"
		;;

		6)
		#call file loader  	
		h_file_loader
		#copy Sega Master System ROMs
		cp -Rv "$folder"/* "$rootdir/ROMs/Sega Master System"
		;;

		7)
		#call file loader  	
		h_file_loader
		#copy Sega Game Gear ROMs
		cp -Rv "$folder"/* "$rootdir/ROMs/Sega Game Gear"
		;;

		8)
		#call file loader  	
		h_file_loader
		#copy GBC ROMs
		cp -Rv "$folder"/* "$rootdir/ROMs/GBC/"
		;;

		9)
		#call file loader  	
		_file-loader
		#copy GBA ROMs
		cp -Rv "$folder"/* "$rootdir/ROMs/GBA/"
		;;

		10)
		#call file loader  	
		h_file_loader
		#copy Turbographx 16 ROMs
		cp -Rv "$folder"/* "$rootdir/ROMs/TurboGraphx 16/"
		;;

		11)  
		#call file loader  	
		h_file_loader
		#copy Neo-Geo CDZ
		cp -Rv "$folder"/* "$rootdir/ROMs/Neo-Geo/CDZ/"
		;;

		12)  
		return
		;;
		esac
	done

	# correct permissions
	h_correct_perms
}

function h_res_switcher()
{
	dialog --infobox "Setting resolution to selection" 3 36
	#resolution is set via _resolution function		
	
	########################		
	#Stella
	########################
	st_org=$(grep -Ee "\bfullres = \b" "$home/.stella/stellarc")
	#make the changes, prefix new_X in case NULL was entered previously
	sed -i "s|$st_org|fullres = $st_new|g" "$home/.stella/stellarc"

	########################		
	#mupen64plus
	########################
	m_org_X=$(grep -Ee "\bScreenWidth = \b" "$home/.config/mupen64plus/mupen64plus.cfg")
	m_org_Y=$(grep -Ee "\bScreenHeight = \b" "$home/.config/mupen64plus/mupen64plus.cfg")
	#make the changes, prefix new_X in case NULL was entered previousey
	sed -i "s|$m_org_X|ScreenWidth = $m_new_X|g" "$home/.config/mupen64plus/mupen64plus.cfg"
	sed -i "s|$m_org_Y|ScreenHeight = $m_new_Y|g" "$home/.config/mupen64plus/mupen64plus.cfg"

	########################		
	#mednafen 
	######################## 

	#Emulator Codes:
	########################
	#Atari Lynx [lynx]
	#GameBoy (Color) [gb]
	#GameBoy Advance [gba]
	#Neo Geo Pocket (Color) [ngp]
	#Nintendo Entertainment System/Famicom [nes]
	#PC Engine (CD)/TurboGrafx 16 (CD)/SuperGrafx [pce]
	#PC Engine (CD)/TurboGrafx 16 (CD)/SuperGrafx [pce_fast]
	#PC-FX [pcfx]
	#Sega Game Gear [gg]
	#Sega Genesis/MegaDrive [md]
	#Sega Master System [sms]
	#Sony PlayStation [psx]
	#Super Nintendo Entertainment System/Super Famicom [snes]
	#Virtual Boy [vb]
	#WonderSwan [wswan]

	#Note: it should be noted that all emulators are set to aspect ratios
	#the screen (EMU_CODE.aspect. See the wiki for more

	#Mednafen (GBC)
	gb_org_X=$(grep -Ee "\bgb.xres\b " "$home/.mednafen/mednafen-09x.cfg")
	gb_org_Y=$(grep -Ee "\bgb.yres\b " "$home/.mednafen/mednafen-09x.cfg")
	#make the changes, prefix new_X in case NULL was entered previously
	sed -i "s|$gb_org_X|gb.xres $gb_new_X|g" "$home/.mednafen/mednafen-09x.cfg"
	sed -i "s|$gb_org_Y|gb.yres $gb_new_Y|g" "$home/.mednafen/mednafen-09x.cfg"

	#Mednafen (NES)
	nes_org_X=$(grep -Ee "\bnes.xres\b " "$home/.mednafen/mednafen-09x.cfg")
	nes_org_Y=$(grep -Ee "\bnes.yres\b " "$home/.mednafen/mednafen-09x.cfg")
	#make the changes, prefix new_X in case NULL was entered previously
	sed -i "s|$nes_org_X|nes.xres $nes_new_X|g" "$home/.mednafen/mednafen-09x.cfg"
	sed -i "s|$nes_org_Y|nes.yres $nes_new_Y|g" "$home/.mednafen/mednafen-09x.cfg"

	#Mednafen (GameBoy Advance)
	gba_org_X=$(grep -Ee "\bgba.xres\b " "$home/.mednafen/mednafen-09x.cfg")
	gba_org_Y=$(grep -Ee "\bgba.yres\b " "$home/.mednafen/mednafen-09x.cfg")
	#make the changes, prefix new_X in case NULL was entered previously
	sed -i "s|$gba_org_X|gba.xres $gba_new_X|g" "$home/.mednafen/mednafen-09x.cfg"
	sed -i "s|$gba_org_Y|gba.yres $gba_new_Y|g" "$home/.mednafen/mednafen-09x.cfg"

	#Mednafen (SNES)
	snes_org_X=$(grep -Ee "\bsnes.xres\b " "$home/.mednafen/mednafen-09x.cfg")
	snes_org_Y=$(grep -Ee "\bsnes.yres\b " "$home/.mednafen/mednafen-09x.cfg")
	#make the changes, prefix new_X in case NULL was entered previously
	sed -i "s|$snes_org_X|snes.xres $snes_new_X|g" "$home/.mednafen/mednafen-09x.cfg"
	sed -i "s|$snes_org_Y|snes.yres $snes_new_Y|g" "$home/.mednafen/mednafen-09x.cfg"

	#Mednafen (Sega Master System, aka Sega Sega Master)
	sms_org_X=$(grep -Ee "\bsms.xres\b " "$home/.mednafen/mednafen-09x.cfg")
	sms_org_Y=$(grep -Ee "\bsms.yres\b " "$home/.mednafen/mednafen-09x.cfg")
	#make the changes, prefix new_X in case NULL was entered previously
	sed -i "s|$sms_org_X|sms.xres $sms_new_X|g" "$home/.mednafen/mednafen-09x.cfg"
	sed -i "s|$sms_org_Y|sms.yres $sms_new_Y|g" "$home/.mednafen/mednafen-09x.cfg"

	#Mednafen (Sega Gane Gear)
	sms_org_X=$(grep -Ee "\bsms.xres\b " "$home/.mednafen/mednafen-09x.cfg")
	sms_org_Y=$(grep -Ee "\bsms.yres\b " "$home/.mednafen/mednafen-09x.cfg")
	#make the changes, prefix new_X in case NULL was entered previously
	sed -i "s|$sms_org_X|sms.xres $sms_new_X|g" "$home/.mednafen/mednafen-09x.cfg"
	sed -i "s|$sms_org_Y|sms.yres $sms_new_Y|g" "$home/.mednafen/mednafen-09x.cfg"


	#Mednafen (Turbographx 16)
	pce_org_X=$(grep -Ee "\bpce.xres\b " "$home/.mednafen/mednafen-09x.cfg")
	pce_org_Y=$(grep -Ee "\bpce.yres\b " "$home/.mednafen/mednafen-09x.cfg")
	#make the changes, prefix new_X in case NULL was entered previously
	sed -i "s|$pce_org_X|pce.xres $pce_new_X|g" "$home/.mednafen/mednafen-09x.cfg"
	sed -i "s|$pce_org_Y|pce.yres $pce_new_Y|g" "$home/.mednafen/mednafen-09x.cfg"

	# correct permissions
	h_correct_perms
}


function h_bios_checker()
{

	# BIOS file checks
	clear
	echo "Checking for Bios files (if applicable)..." | tee >> "$rootdir/logs/debug.log"
	echo ""
	sleep 3s

	# Neo-Geo BIOS files
	h_filechecker "$rootdir/ROMs/Neo-Geo/BIOS" 
	# output something to user, so they don't necessarily have to check the debug log
	echo "BIOS directory contains: "
	tail -n 1 "$rootdir/logs/debug.log"
	echo ""

	# If MESS is loaded already, verify BIOS files
	/usr/games/mess neocdz -verifyroms

	#hold for review
	sleep 5s

}

function h_bios_loader()
{
	
# present menu

cmd=(dialog --backtitle "LibreGeek.org RetroRig Installer" --menu "Load BIOS files for which system?" 19 32 24)
options=(1 "Neo-Geo CDZ" 
	 12 "Exit BIOS Loader")

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in

		1)
		#call file loader  	
		h_file_loader
		#copy Neo-Geo BIOS file over
		cp -Rv "$folder" "$rootdir/ROMs/Neo-Geo/BIOS"
		;;

		2)  
		;;

		esac
	done
	
	#fix persmissions, post-copy
	h_correct_perms

}

function h_correct_perms()
{
	# correct permissions since we use sudo
	chgrp -R "$user" "$rootdir"
    	chown -R "$user" "$rootdir"
    	chgrp -R "$user" "$home"
    	chown -R "$user" "$home"
}

function h_filechecker()
{
    if [[ -e "$1" ]]; then
        ls -lh "$1" | tee >> "$rootdir/logs/debug.log"
    else
        echo "$1 does not exist!" | tee >> "$rootdir/logs/debug.log"
    fi
}

function h_pkgcheck()
{
    PKG_OK=$(dpkg-query -s "$1" | egrep -w "Status|Package|Version")
    echo "Checking for somelib: $PKG_OK"
    if [ "" == "$PKG_OK" ]; then
        echo "NOT INSTALLED: $1" >> "$rootdir/logs/debug.log"
    else
        echo "installed: $1" >> "$rootdir/logs/debug.log"
    fi
}

function h_update_git() 
{

echo "Fetching latest version of the RetroPie Setup Script."
pushd "$scriptdir"

if [[ ! -d ".git" ]]; then
	dialog --backtitle "LibreGeek.org - RetroRig Setup." --msgbox "Cannot find direcotry 	'.git'. Please clone the RetroRig setup script via \
	'git clone https://github.com/ProfessorKaos64/RetroRig'" 20 60
	popd
	return
fi
git pull
#pause for quick review
sleep 3s
popd

dialog --backtitle "LibreGeek.org - RetroRig Setup." --msgbox "Fetched the latest version of the RetroRig repository. Please exit and restart the script." 7 60 
}

function h_update_system() 
{
apt-get update
sleep 3s
clear

}

function h_upgrade_system() 
{

clear
apt-get update
apt-get upgrade
sleep 3s
clear

}

function h_start_xbmc() 
{

dialog --infobox "starting RetroRig" 3 21
sleep 1s
/usr/bin/xbmc
#clear
clear

}

