--- xbmc/input/SDLJoystick.cpp	2014-06-23 21:51:34.205861040 +0200
+++ ../SDLJoystick.cpp	2014-06-23 21:51:27.857861109 +0200
@@ -27,6 +27,7 @@
 #include "utils/log.h"
 #include "utils/StringUtils.h"
 
+#include <signal.h>
 #include <math.h>
 
 #ifdef HAS_SDL_JOYSTICK
@@ -58,11 +59,33 @@
     SetEnabled(((CSettingBool*)setting)->GetValue() && PERIPHERALS::CPeripheralImon::GetCountOfImonsConflictWithDInput() == 0);
 }
 
+void ReScan(int i)
+{
+  fprintf(stdout,"debug RetroRig: ReScan\n");
+  #ifdef HAS_SDL_JOYSTICK
+ 
+  // switch off
+  g_Joystick.SetEnabled( false );
+ 
+  // switch back on
+  if (CSettings::Get().GetBool("input.enablejoystick"))
+  {
+    g_Joystick.SetEnabled( true );
+  }
+  #endif
+ 
+}
+
 void CJoystick::Initialize()
 {
   if (!IsEnabled())
     return;
 
+  fprintf(stdout,"debug RetroRig: CJoystick::Initialize\n");
+
+  // debug RetroRig: register interrupt handler for SIGUSR1 to have XBMC re-initialze the gamepads
+  signal(SIGUSR1, ReScan);
+
   if(SDL_InitSubSystem(SDL_INIT_JOYSTICK) != 0)
   {
     CLog::Log(LOGERROR, "(Re)start joystick subsystem failed : %s",SDL_GetError());
